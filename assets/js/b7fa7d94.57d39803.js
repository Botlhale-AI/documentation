"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4141],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=o,d=m["".concat(c,".").concat(u)]||m[u]||p[u]||r;return n?a.createElement(d,i(i({ref:t},h),{},{components:n})):a.createElement(d,i({ref:t},h))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5920:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return h}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],s={},c="Live Chats",l={unversionedId:"Platform/help-desk/Live Chats",id:"Platform/help-desk/Live Chats",isDocsHomePage:!1,title:"Live Chats",description:"This section covers interactions between the human (an agent) and the customer (end user), triggered after the human handover function is activated on the chatbot by the customer. Agents can access their live chats by navigating to Help Desk > Live Chats on the Botlhale NLP Toolkit site. The Live Chats interface is illustrated in the following image.",source:"@site/docs/0 - Platform/help-desk/1 - Live Chats.md",sourceDirName:"0 - Platform/help-desk",slug:"/Platform/help-desk/Live Chats",permalink:"/docs/Platform/help-desk/Live Chats",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Knowledge Base",permalink:"/docs/Platform/live-bots/Knowledge Base"},next:{title:"Archived Chats",permalink:"/docs/Platform/help-desk/Archived Chats"}},h=[{value:"Human Handoff Integration",id:"human-handoff-integration",children:[]}],p={toc:h};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"live-chats"},"Live Chats"),(0,r.kt)("p",null,"This section covers interactions between the human (an agent) and the customer (end user), triggered after the human handover function is activated on the chatbot by the customer. Agents can access their live chats by navigating to ",(0,r.kt)("strong",{parentName:"p"},"Help Desk > Live Chats")," on the Botlhale NLP Toolkit site. The Live Chats interface is illustrated in the following image."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://stoplight.io/api/v1/projects/cHJqOjU4NzU5/images/Qa56xllEezc",alt:"live_chat.png"})),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Agents can use the arrows next to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Translate Conversations")," tab to select their preferred language for the live chat. If the agent's interlocutor is conversing in a different language, the messages are translated in real-time."))),(0,r.kt)("h2",{id:"human-handoff-integration"},"Human Handoff Integration"),(0,r.kt)("p",null,"Botbuilder has a predefined dialogue that can be selected to enable the human handoff feature. See the ",(0,r.kt)("a",{parentName:"p",href:"3%20-%20Dialogue%20Manager.md#create-preset-dialogues"},"Dialogue Manager")," section of this documentation for information on how to enable this preset dialogue."),(0,r.kt)("p",null,"The human handoff dialogue contains the following two dialogue streams: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"provide_handoff_options "),(0,r.kt)("li",{parentName:"ul"},"execute_handoff ")),(0,r.kt)("p",null,"These two dialogues work off the shell and do not require any modifications. "),(0,r.kt)("p",null,"The human handoff capability uses ",(0,r.kt)("a",{parentName:"p",href:"https://socket.io/docs/v3/"},"Socket.IO"),", a library that allows message passing between a server and multiple clients. All chatbots with human handoff set up need to connect to Botlhale AI's ",(0,r.kt)("a",{parentName:"p",href:"https://app.botlhale.xyz/live_server"},"Socket.IO server")),(0,r.kt)("p",null,"The following code snippets can be used to set up socket IO, as well as event listener and emitter functions to interface with Botlhale AI's Socket.IO server. The code snippets use JavaScript. However, if your bot is integrated in a non-JavaScript environment, there are several client implementations available in other languages. See the ",(0,r.kt)("a",{parentName:"p",href:"https://socket.io/docs/v3/"},"Socket.IO documentation")," for additional information."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"<script src=\"https://cdn.socket.io/3.1.3/socket.io.min.js\" \nintegrity=\"sha384-cPwlPLvBTa3sKAgddT6krw0cJat7egBga3DJepJyrLl4Q9/5WLra3rrnMcyTyOnh\" crossorigin=\"anonymous\"><\/script>\n\n// SOCKET IO initialisation !\nconst socket = io.connect('https://app.botlhale.io/live_agent', {autoConnect: false});\n\n// first time connecting to the main socket !\nsocket.on('startConversation', function() {\n   socket.emit('username', {\n       \"ConversationID\": ConversationID,\n       \"BotID\": BotID\n   });\n});\n \n// receiving a message !\nsocket.on('to_user', function(data) {\n   let text = data.message;\n   setBotResponse(text);\n});\n \n// send messages to clients !\nsocket.on('messages', function(data) {\n   let messages = []\n   // populate messages variable with user-bot conversation !\n   // each element in the array must have the following format:\n   // {'sender': String, 'message': String}\n   // if message belongs to the user, then the value of 'sender' must be 'user'\n   // if message belongs to the bot, then the value of 'sender' must be 'bot'\n   socket.emit('messages_to_client', {\n       \"messages\": messages,\n       \"bot_id\": BotID\n   });\n});\n \n// disconnecting socket !\nsocket.on('disconnect_socket', function(data) {\n   socket.disconnect();\n});\n\n // Sending a message\nif (socket.connected) {\n  // Send a message to socket \n   socket.emit('from_user', {\n       \"message\": message,\n       \"ConversationID\": ConversationID,\n       \"BotID\": BotID\n   });\n \n} else {\n  // Send a message bot\n}\n\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("blockquote",{parentName:"div"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"We are here to help! For any questions regarding this feature, please email ",(0,r.kt)("a",{parentName:"em",href:"mailto:support@botlhale.ai"},"support@botlhale.ai")))))))}m.isMDXComponent=!0}}]);